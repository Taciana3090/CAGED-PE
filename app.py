import pandas as pd
import streamlit as st
import altair as alt
import plotly.express as px
import seaborn as sns
import matplotlib.pyplot as plt
import locale

# localiza√ß√£o para portugu√™s
st.set_page_config(
    page_title="Dashboard CAGED Pernambuco",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded",
)

# base de dados
file_path = 'https://github.com/Taciana3090/CAGED-PE/raw/master/Data/CAGED-PE_LIMPO.csv'
@st.cache_data  # cache para evitar o carregamento repetido dos dados
def load_data(file_path):
    data = pd.read_csv(file_path)
    return data

df = load_data(file_path)

# renomeando as colunas
df.rename(columns={
    'uf': 'Estado',
    'munic√≠pio': 'Cidade',
    'idade': 'Idade',
    'ra√ßacor': 'Ra√ßa/Cor',
    'cbo2002ocupa√ß√£o': 'C√≥digo Ocupa√ß√£o',
    'categoria': 'Categoria',
    'graudeinstru√ß√£o': 'N√≠vel Instru√ß√£o',
    'sexo': 'G√™nero',
    'tipoempregador': 'Tipo Empregador',
    'tipoestabelecimento': 'Tipo Estabelecimento',
    'tipomovimenta√ß√£o': 'Tipo Movimenta√ß√£o',
    'tipodedefici√™ncia': 'Tipo Defici√™ncia',
    'indtrabintermitente': 'Trabalho Intermitente',
    'indtrabparcial': 'Trabalho Parcial',
    'sal√°rio': 'Sal√°rio',
    'se√ß√£o': 'Se√ß√£o de Atividade Econ√¥mica',
    'valorsal√°riofixo': 'Valor Sal√°rio Fixo',
    'ano_declara√ß√£o': 'Ano Declara√ß√£o',
    'm√™s_declara√ß√£o': 'M√™s Declara√ß√£o',
    'ano_exclus√£o': 'Ano Exclus√£o',
    'm√™s_exclus√£o': 'M√™s Exclus√£o',
}, inplace=True)

# centralizando o t√≠tulo com HTML
st.write("<h1 style='text-align: center;'>Dashboard Interativo - Dados do CAGED-PE</h1>", unsafe_allow_html=True)
st.write("""

Bem-vindo ao nosso dashboard interativo! Aqui, voc√™ pode explorar an√°lises detalhadas dos dados de empregos formais em Pernambuco.

**Objetivo:** Este dashboard tem como objetivo oferecer insights valiosos a partir dos dados do CAGED-PE, permitindo uma an√°lise personalizada dos empregos formais na regi√£o.

**Explora√ß√£o Interativa:** Use os filtros √† esquerda para personalizar a visualiza√ß√£o dos gr√°ficos abaixo. Selecione o ano, a cidade, o g√™nero e a se√ß√£o de atividade econ√¥mica para analisar diferentes aspectos dos dados.

**Gr√°ficos:** Abaixo, voc√™ encontrar√° gr√°ficos interativos que ilustram as tend√™ncias e os padr√µes dos empregos formais em Pernambuco.
""")

# lista de anos √∫nicos
anos_disponiveis = df['Ano Declara√ß√£o'].unique()

with st.sidebar:
    st.header("Filtros")
    st.markdown("Personalize a visualiza√ß√£o dos gr√°ficos:")
    selected_ano = st.radio('Ano:', anos_disponiveis)
    selected_cidade = st.selectbox('Cidade:', df['Cidade'].unique())
    selected_genero = st.selectbox('G√™nero:', df['G√™nero'].unique())
    selected_secao = st.selectbox('Se√ß√£o de Atividade Econ√¥mica:', df['Se√ß√£o de Atividade Econ√¥mica'].unique())


# base nos filtros selecionados
filtered_data = df[
    (df['Cidade'] == selected_cidade) &
    (df['G√™nero'] == selected_genero) &
    (df['Se√ß√£o de Atividade Econ√¥mica'] == selected_secao) &
    (df['Ano Declara√ß√£o'] == selected_ano)
]

# histograma de Idades por G√™nero
fig = px.histogram(
    filtered_data,
    x='Idade',
    color='G√™nero',
    facet_col='Se√ß√£o de Atividade Econ√¥mica',  # Facetamento por se√ß√£o de atividade econ√¥mica
    title=f'Distribui√ß√£o de Idades por {selected_genero} em {selected_cidade} ({selected_ano})',
    labels={'Idade': 'Idade', 'count': 'N√∫mero de Pessoas'} 
)

# se√ß√£o de atividade econ√¥mica e tipo de movimenta√ß√£o (admiss√£o/desligamento)
movimentacao_data = filtered_data.groupby(['Se√ß√£o de Atividade Econ√¥mica', 'saldomovimenta√ß√£o', 'G√™nero']).size().reset_index(name='Quantidade')

# gr√°fico de barras empilhadas para admiss√µes e desligamentos
stacked_bar_chart = px.bar(
    movimentacao_data,
    x='Se√ß√£o de Atividade Econ√¥mica',
    y='Quantidade',
    color='saldomovimenta√ß√£o',
    title=f'Admiss√µes e Desligamentos por {selected_genero} em {selected_cidade} ({selected_ano})',
    labels={'Se√ß√£o de Atividade Econ√¥mica': 'Se√ß√£o de Atividade Econ√¥mica', 'Quantidade': 'Quantidade', 'saldomovimenta√ß√£o': 'Movimenta√ß√£o'}
)
# ...

# se√ß√£o de atividade econ√¥mica, n√≠vel de instru√ß√£o e tipo de movimenta√ß√£o (admiss√£o/desligamento)
movimentacao_data = filtered_data.groupby(['Se√ß√£o de Atividade Econ√¥mica', 'N√≠vel Instru√ß√£o', 'saldomovimenta√ß√£o']).size().reset_index(name='Quantidade')

# admiss√µes e desligamentos
admissoes = movimentacao_data[movimentacao_data['saldomovimenta√ß√£o'] == 'Admiss√£o']
desligamentos = movimentacao_data[movimentacao_data['saldomovimenta√ß√£o'] == 'Desligamento']

# gr√°fico de barras agrupadas para admiss√µes e desligamentos por n√≠vel de instru√ß√£o
grouped_bar_chart_movimentacao = px.bar(
    movimentacao_data,
    x='Se√ß√£o de Atividade Econ√¥mica',
    y='Quantidade',
    color='N√≠vel Instru√ß√£o',
    barmode='group',  # modo de agrupamento de barras
    facet_col='saldomovimenta√ß√£o',
    title=f'Admiss√µes e Desligamentos por {selected_genero} e N√≠vel de Instru√ß√£o em {selected_cidade} ({selected_ano})',
    labels={'Se√ß√£o de Atividade Econ√¥mica': 'Se√ß√£o de Atividade Econ√¥mica', 'Quantidade': 'Quantidade', 'saldomovimenta√ß√£o': 'Movimenta√ß√£o'}
)

# formata√ß√£o para moeda brasileira
locale.setlocale(locale.LC_ALL, 'pt_BR.UTF-8')

# se√ß√£o de atividade econ√¥mica e calcular a m√©dia salarial
media_salarial_por_secao = filtered_data.groupby('Se√ß√£o de Atividade Econ√¥mica')['Sal√°rio'].mean().reset_index()

# gr√°fico de barras para a m√©dia salarial por se√ß√£o de atividade econ√¥mica
bar_chart_media_salarial = px.bar(
    media_salarial_por_secao,
    x='Se√ß√£o de Atividade Econ√¥mica',
    y='Sal√°rio',
    title=f'M√©dia Salarial por {selected_genero} em {selected_cidade} ({selected_ano})',
    labels={'Se√ß√£o de Atividade Econ√¥mica': 'Setor da Economia', 'Sal√°rio': 'M√©dia Salarial (R$)'}
)

# em reais no formato correto
bar_chart_media_salarial.update_layout(yaxis_tickprefix='R$', yaxis_tickformat=',.2f')


# gr√°ficos na p√°gina principal
st.write("<h2 style='text-align: center;'>Gr√°ficos</h2>", unsafe_allow_html=True)
st.plotly_chart(fig, use_container_width=True)  
st.plotly_chart(stacked_bar_chart, use_container_width=True)  
st.plotly_chart(grouped_bar_chart_movimentacao, use_container_width=True)
st.plotly_chart(bar_chart_media_salarial, use_container_width=True)